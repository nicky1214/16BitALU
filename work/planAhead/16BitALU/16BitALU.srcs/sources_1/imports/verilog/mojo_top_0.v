/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg spi_miso,
    output reg [3:0] spi_channel,
    output reg avr_rx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_edge_detector_out;
  reg [1-1:0] M_edge_detector_in;
  edge_detector_1 edge_detector (
    .clk(clk),
    .in(M_edge_detector_in),
    .out(M_edge_detector_out)
  );
  wire [1-1:0] M_button_cond_out;
  reg [1-1:0] M_button_cond_in;
  button_conditioner_2 button_cond (
    .clk(clk),
    .in(M_button_cond_in),
    .out(M_button_cond_out)
  );
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_3 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [16-1:0] M_alu_test_indicator;
  wire [2-1:0] M_alu_test_statecheck;
  reg [1-1:0] M_alu_test_next_state;
  reg [16-1:0] M_alu_test_switches;
  reg [6-1:0] M_alu_test_alufn;
  reg [1-1:0] M_alu_test_togglestates;
  alu_test_4 alu_test (
    .clk(clk),
    .rst(rst),
    .next_state(M_alu_test_next_state),
    .switches(M_alu_test_switches),
    .alufn(M_alu_test_alufn),
    .togglestates(M_alu_test_togglestates),
    .indicator(M_alu_test_indicator),
    .statecheck(M_alu_test_statecheck)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = {M_alu_test_indicator[8+7-:8], M_alu_test_indicator[0+7-:8], {6'h00, M_alu_test_statecheck}};
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_button_cond_in = io_button[2+0-:1];
    M_edge_detector_in = M_button_cond_out;
    M_alu_test_next_state = M_edge_detector_out;
    M_alu_test_alufn = io_dip[0+2+5-:6];
    M_alu_test_switches = {io_dip[16+7-:8], io_dip[8+7-:8]};
    M_alu_test_togglestates = io_dip[0+0+0-:1];
  end
endmodule
