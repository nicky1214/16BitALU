module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    output spi_miso,        // AVR SPI MISO
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    output avr_rx,          // AVR RX (FPGA TX)
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    
    edge_detector edge_detector(#RISE(1), #FALL(0)); // detect rising edges
    button_conditioner button_cond;     // button input conditioner
    reset_conditioner reset_cond;
    .rst(rst){alu_test alu_test;}
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    
    io_led = {alu_test.indicator[15:8],alu_test.indicator[7:0],c{6x{0}, alu_test.statecheck}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits

    
    button_cond.in = io_button[2];            // raw button input
    edge_detector.in = button_cond.out; // input to the edge_detector    
    alu_test.next_state = edge_detector.out;
    alu_test.alufn = io_dip[0][7:2]; //allocate dip switches to alufn
    alu_test.switches = c{io_dip[2], io_dip[1]}; //allocate dip switches to input a and input b
    alu_test.togglestates = io_dip[0][0]; //allocate 1st dip switch on the right to be the manual and auto state toggle
    
    
}
  
}